// Main SCSS entry point
// This file imports all Sass partials in the correct order

// 1. Variables and configuration (must be first)
@use 'variables';
@use 'colors';
@use 'spacing';
@use 'mixins';

// 2. Base styles and resets
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  font-size: 16px; // Base font size for rem calculations
}

body {
  font-family: variables.$font-family-base;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: var(--background-color);
  color: var(--text-primary);
  line-height: map-get(variables.$line-heights, normal);
  min-height: 100vh;
}

#root {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
}

// 3. Utility classes
.container {
  @include mixins.container();
}

.container-sm {
  @include mixins.container(sm);
}

.container-md {
  @include mixins.container(md);
}

.container-lg {
  @include mixins.container(lg);
}

.container-xl {
  @include mixins.container(xl);
}

.container-2xl {
  @include mixins.container(2xl);
}

// Flexbox utilities
.flex {
  display: flex;
}

.flex-col {
  flex-direction: column;
}

.flex-row {
  flex-direction: row;
}

.flex-wrap {
  flex-wrap: wrap;
}

.flex-nowrap {
  flex-wrap: nowrap;
}

.items-start {
  align-items: flex-start;
}

.items-center {
  align-items: center;
}

.items-end {
  align-items: flex-end;
}

.items-stretch {
  align-items: stretch;
}

.justify-start {
  justify-content: flex-start;
}

.justify-center {
  justify-content: center;
}

.justify-end {
  justify-content: flex-end;
}

.justify-between {
  justify-content: space-between;
}

.justify-around {
  justify-content: space-around;
}

.justify-evenly {
  justify-content: space-evenly;
}

.flex-1 {
  flex: 1 1 0%;
}

.flex-auto {
  flex: 1 1 auto;
}

.flex-none {
  flex: none;
}

// Grid utilities
.grid {
  display: grid;
}

.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}

.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

.grid-cols-3 {
  grid-template-columns: repeat(3, minmax(0, 1fr));
}

.grid-cols-4 {
  grid-template-columns: repeat(4, minmax(0, 1fr));
}

.grid-auto-fit {
  @include mixins.grid-auto-fit();
}

// Gap utilities
.gap-0 { gap: 0; }
.gap-px { gap: spacing.space(px); }
.gap-0\.5 { gap: spacing.space(0.5); }
.gap-1 { gap: spacing.space(1); }
.gap-1\.5 { gap: spacing.space(1.5); }
.gap-2 { gap: spacing.space(2); }
.gap-2\.5 { gap: spacing.space(2.5); }
.gap-3 { gap: spacing.space(3); }
.gap-3\.5 { gap: spacing.space(3.5); }
.gap-4 { gap: spacing.space(4); }
.gap-5 { gap: spacing.space(5); }
.gap-6 { gap: spacing.space(6); }
.gap-7 { gap: spacing.space(7); }
.gap-8 { gap: spacing.space(8); }
.gap-9 { gap: spacing.space(9); }
.gap-10 { gap: spacing.space(10); }
.gap-11 { gap: spacing.space(11); }
.gap-12 { gap: spacing.space(12); }
.gap-14 { gap: spacing.space(14); }
.gap-16 { gap: spacing.space(16); }
.gap-20 { gap: spacing.space(20); }
.gap-24 { gap: spacing.space(24); }

// Named gap utilities for semantic usage
.gap-xs { gap: spacing.$spacing-xs; }
.gap-sm { gap: spacing.$spacing-sm; }
.gap-md { gap: spacing.$spacing-md; }
.gap-lg { gap: spacing.$spacing-lg; }
.gap-xl { gap: spacing.$spacing-xl; }
.gap-2xl { gap: spacing.$spacing-2xl; }
.gap-3xl { gap: spacing.$spacing-3xl; }
.gap-4xl { gap: spacing.$spacing-4xl; }
.gap-5xl { gap: spacing.$spacing-5xl; }

// Spacing utilities
.p-0 { padding: 0; }
.p-1 { padding: spacing.space(1); }
.p-2 { padding: spacing.space(2); }
.p-3 { padding: spacing.space(3); }
.p-4 { padding: spacing.space(4); }
.p-5 { padding: spacing.space(5); }
.p-6 { padding: spacing.space(6); }
.p-8 { padding: spacing.space(8); }

.px-0 { padding-left: 0; padding-right: 0; }
.px-1 { padding-left: spacing.space(1); padding-right: spacing.space(1); }
.px-2 { padding-left: spacing.space(2); padding-right: spacing.space(2); }
.px-3 { padding-left: spacing.space(3); padding-right: spacing.space(3); }
.px-4 { padding-left: spacing.space(4); padding-right: spacing.space(4); }
.px-6 { padding-left: spacing.space(6); padding-right: spacing.space(6); }

.py-0 { padding-top: 0; padding-bottom: 0; }
.py-1 { padding-top: spacing.space(1); padding-bottom: spacing.space(1); }
.py-2 { padding-top: spacing.space(2); padding-bottom: spacing.space(2); }
.py-3 { padding-top: spacing.space(3); padding-bottom: spacing.space(3); }
.py-4 { padding-top: spacing.space(4); padding-bottom: spacing.space(4); }
.py-6 { padding-top: spacing.space(6); padding-bottom: spacing.space(6); }

.m-0 { margin: 0; }
.m-1 { margin: spacing.space(1); }
.m-2 { margin: spacing.space(2); }
.m-3 { margin: spacing.space(3); }
.m-4 { margin: spacing.space(4); }
.m-6 { margin: spacing.space(6); }
.m-8 { margin: spacing.space(8); }

.mx-auto { margin-left: auto; margin-right: auto; }

.mb-0 { margin-bottom: 0; }
.mb-1 { margin-bottom: spacing.space(1); }
.mb-2 { margin-bottom: spacing.space(2); }
.mb-3 { margin-bottom: spacing.space(3); }
.mb-4 { margin-bottom: spacing.space(4); }
.mb-6 { margin-bottom: spacing.space(6); }
.mb-8 { margin-bottom: spacing.space(8); }

.mt-0 { margin-top: 0; }
.mt-1 { margin-top: spacing.space(1); }
.mt-2 { margin-top: spacing.space(2); }
.mt-3 { margin-top: spacing.space(3); }
.mt-4 { margin-top: spacing.space(4); }
.mt-6 { margin-top: spacing.space(6); }
.mt-8 { margin-top: spacing.space(8); }

// Typography utilities
.text-xs { @include mixins.font-size(xs); }
.text-sm { @include mixins.font-size(sm); }
.text-base { @include mixins.font-size(base); }
.text-lg { @include mixins.font-size(lg); }
.text-xl { @include mixins.font-size(xl); }
.text-2xl { @include mixins.font-size(2xl); }
.text-3xl { @include mixins.font-size(3xl); }
.text-4xl { @include mixins.font-size(4xl); }

.font-normal { font-weight: variables.$font-weight-normal; }
.font-medium { font-weight: variables.$font-weight-medium; }
.font-semibold { font-weight: variables.$font-weight-semibold; }
.font-bold { font-weight: variables.$font-weight-bold; }

.leading-tight { @include mixins.line-height(tight); }
.leading-normal { @include mixins.line-height(normal); }
.leading-relaxed { @include mixins.line-height(relaxed); }
.leading-loose { @include mixins.line-height(loose); }

.text-left { text-align: left; }
.text-center { text-align: center; }
.text-right { text-align: right; }

.truncate { @include mixins.truncate; }

// Color utilities
.text-primary { color: var(--text-primary); }
.text-secondary { color: var(--text-secondary); }
.text-tertiary { color: var(--text-tertiary); }
.text-disabled { color: var(--text-disabled); }
.text-inverse { color: var(--text-inverse); }

.text-success { color: var(--success); }
.text-warning { color: var(--warning); }
.text-error { color: var(--error); }
.text-info { color: var(--info); }

// Enhanced status text utilities
.text-success-dark { color: var(--success-text); }
.text-warning-dark { color: var(--warning-text); }
.text-error-dark { color: var(--error-text); }
.text-info-dark { color: var(--info-text); }

// Primary color variants
.text-primary-color { color: var(--primary); }
.text-primary-hover { color: var(--primary-hover); }
.text-primary-dark { color: var(--primary-dark); }

// Secondary color variants
.text-secondary-color { color: var(--secondary); }
.text-secondary-hover { color: var(--secondary-hover); }

// Background utilities
.bg-primary { background-color: var(--bg-primary); }
.bg-secondary { background-color: var(--bg-secondary); }
.bg-tertiary { background-color: var(--bg-tertiary); }
.bg-surface { background-color: var(--surface); }

// Status background utilities
.bg-success { background-color: var(--success-bg); }
.bg-warning { background-color: var(--warning-bg); }
.bg-error { background-color: var(--error-bg); }
.bg-info { background-color: var(--info-bg); }

// Solid background utilities with proper text contrast
.bg-success-solid { 
  background-color: var(--success); 
  color: var(--text-inverse); 
}
.bg-warning-solid { 
  background-color: var(--warning); 
  color: var(--text-inverse); 
}
.bg-error-solid { 
  background-color: var(--error); 
  color: var(--text-inverse); 
}
.bg-info-solid { 
  background-color: var(--info); 
  color: var(--text-inverse); 
}
.bg-primary-solid { 
  background-color: var(--primary); 
  color: var(--text-inverse); 
}
.bg-secondary-solid { 
  background-color: var(--secondary); 
  color: var(--text-inverse); 
}

// Alpha background utilities
.bg-primary-alpha { background-color: var(--primary-alpha); }
.bg-error-alpha { background-color: var(--error-alpha); }

// Additional alpha variants
.bg-primary-alpha-10 { background-color: var(--primary-alpha-10); }
.bg-primary-alpha-20 { background-color: var(--primary-alpha-20); }
.bg-success-alpha-10 { background-color: var(--success-alpha-10); }
.bg-success-alpha-20 { background-color: var(--success-alpha-20); }
.bg-warning-alpha-10 { background-color: var(--warning-alpha-10); }
.bg-warning-alpha-20 { background-color: var(--warning-alpha-20); }
.bg-error-alpha-10 { background-color: var(--error-alpha-10); }
.bg-error-alpha-20 { background-color: var(--error-alpha-20); }
.bg-info-alpha-10 { background-color: var(--info-alpha-10); }
.bg-info-alpha-20 { background-color: var(--info-alpha-20); }
.bg-neutral-alpha-10 { background-color: var(--neutral-alpha-10); }
.bg-neutral-alpha-20 { background-color: var(--neutral-alpha-20); }
.bg-neutral-alpha-50 { background-color: var(--neutral-alpha-50); }

// Interactive state utilities
.bg-interactive-hover { background-color: var(--interactive-hover); }
.bg-interactive-active { background-color: var(--interactive-active); }
.bg-interactive-disabled { background-color: var(--interactive-disabled); }

// Hover state utilities
.hover\:text-primary:hover { color: var(--text-primary); }
.hover\:text-secondary:hover { color: var(--text-secondary); }
.hover\:text-success:hover { color: var(--success-hover); }
.hover\:text-warning:hover { color: var(--warning-hover); }
.hover\:text-error:hover { color: var(--error-hover); }
.hover\:text-info:hover { color: var(--info-hover); }
.hover\:text-primary-color:hover { color: var(--primary-hover); }

.hover\:bg-primary:hover { background-color: var(--bg-secondary); }
.hover\:bg-secondary:hover { background-color: var(--bg-tertiary); }
.hover\:bg-success:hover { background-color: var(--success-light); }
.hover\:bg-warning:hover { background-color: var(--warning-light); }
.hover\:bg-error:hover { background-color: var(--error-light); }
.hover\:bg-info:hover { background-color: var(--info-light); }

// Border utilities
.border { border: 1px solid var(--border); }
.border-0 { border: 0; }
.border-t { border-top: 1px solid var(--border); }
.border-r { border-right: 1px solid var(--border); }
.border-b { border-bottom: 1px solid var(--border); }
.border-l { border-left: 1px solid var(--border); }

.border-primary { border-color: var(--border); }
.border-secondary { border-color: var(--border-secondary); }
.border-focus { border-color: var(--border-focus); }

// Status border utilities
.border-success { border-color: var(--success); }
.border-warning { border-color: var(--warning); }
.border-error { border-color: var(--error); }
.border-info { border-color: var(--info); }

// Enhanced status border utilities
.border-success-light { border-color: var(--success-border); }
.border-warning-light { border-color: var(--warning-border); }
.border-error-light { border-color: var(--error-border); }
.border-info-light { border-color: var(--info-border); }

// Primary color border utilities
.border-primary-color { border-color: var(--primary); }
.border-secondary-color { border-color: var(--secondary); }

// Hover border utilities
.hover\:border-primary:hover { border-color: var(--border-secondary); }
.hover\:border-success:hover { border-color: var(--success-hover); }
.hover\:border-warning:hover { border-color: var(--warning-hover); }
.hover\:border-error:hover { border-color: var(--error-hover); }
.hover\:border-info:hover { border-color: var(--info-hover); }
.hover\:border-primary-color:hover { border-color: var(--primary-hover); }

.rounded-none { border-radius: map-get(variables.$border-radius, none); }
.rounded-sm { border-radius: map-get(variables.$border-radius, sm); }
.rounded { border-radius: map-get(variables.$border-radius, base); }
.rounded-md { border-radius: map-get(variables.$border-radius, md); }
.rounded-lg { border-radius: map-get(variables.$border-radius, lg); }
.rounded-xl { border-radius: map-get(variables.$border-radius, xl); }
.rounded-2xl { border-radius: map-get(variables.$border-radius, 2xl); }
.rounded-full { border-radius: map-get(variables.$border-radius, full); }

// Shadow utilities
.shadow-none { box-shadow: none; }
.shadow-sm { box-shadow: map-get(variables.$shadows, sm); }
.shadow { box-shadow: #{map-get(variables.$shadows, base)}; }
.shadow-md { box-shadow: #{map-get(variables.$shadows, md)}; }
.shadow-lg { box-shadow: #{map-get(variables.$shadows, lg)}; }
.shadow-xl { box-shadow: #{map-get(variables.$shadows, xl)}; }
.shadow-2xl { box-shadow: map-get(variables.$shadows, 2xl); }

// Display utilities
.block { display: block; }
.inline-block { display: inline-block; }
.inline { display: inline; }
.hidden { display: none; }

// Position utilities
.relative { position: relative; }
.absolute { position: absolute; }
.fixed { position: fixed; }
.sticky { position: sticky; }

// Overflow utilities
.overflow-hidden { overflow: hidden; }
.overflow-auto { overflow: auto; }
.overflow-scroll { overflow: scroll; }

// Width and height utilities
.w-full { width: 100%; }
.w-auto { width: auto; }
.h-full { height: 100%; }
.h-auto { height: auto; }
.min-h-screen { min-height: 100vh; }

// Accessibility utilities
.sr-only {
  @include mixins.visually-hidden;
}

.focus-ring {
  @include mixins.focus-ring;
}

// Responsive utilities
@include mixins.breakpoint(sm) {
  .sm\:hidden { display: none; }
  .sm\:block { display: block; }
  .sm\:flex { display: flex; }
  .sm\:grid { display: grid; }
  
  .sm\:flex-col { flex-direction: column; }
  .sm\:flex-row { flex-direction: row; }
  
  .sm\:text-sm { @include mixins.font-size(sm); }
  .sm\:text-base { @include mixins.font-size(base); }
  .sm\:text-lg { @include mixins.font-size(lg); }
  
  .sm\:p-2 { padding: spacing.space(2); }
  .sm\:p-3 { padding: spacing.space(3); }
  .sm\:p-4 { padding: spacing.space(4); }
  
  .sm\:gap-2 { gap: spacing.space(2); }
  .sm\:gap-3 { gap: spacing.space(3); }
  .sm\:gap-4 { gap: spacing.space(4); }
}

@include mixins.breakpoint(md) {
  .md\:hidden { display: none; }
  .md\:block { display: block; }
  .md\:flex { display: flex; }
  .md\:grid { display: grid; }
  
  .md\:flex-col { flex-direction: column; }
  .md\:flex-row { flex-direction: row; }
  
  .md\:text-base { @include mixins.font-size(base); }
  .md\:text-lg { @include mixins.font-size(lg); }
  .md\:text-xl { @include mixins.font-size(xl); }
  
  .md\:p-4 { padding: spacing.space(4); }
  .md\:p-6 { padding: spacing.space(6); }
  .md\:p-8 { padding: spacing.space(8); }
  
  .md\:gap-4 { gap: spacing.space(4); }
  .md\:gap-6 { gap: spacing.space(6); }
  .md\:gap-8 { gap: spacing.space(8); }
}

@include mixins.breakpoint(lg) {
  .lg\:hidden { display: none; }
  .lg\:block { display: block; }
  .lg\:flex { display: flex; }
  .lg\:grid { display: grid; }
  
  .lg\:flex-row { flex-direction: row; }
  .lg\:flex-col { flex-direction: column; }
  
  .lg\:text-lg { @include mixins.font-size(lg); }
  .lg\:text-xl { @include mixins.font-size(xl); }
  .lg\:text-2xl { @include mixins.font-size(2xl); }
  
  .lg\:p-6 { padding: spacing.space(6); }
  .lg\:p-8 { padding: spacing.space(8); }
  
  .lg\:gap-6 { gap: spacing.space(6); }
  .lg\:gap-8 { gap: spacing.space(8); }
}

// Reduced motion support
@include mixins.reduced-motion {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

// High contrast mode support
@include mixins.high-contrast {
  .shadow,
  .shadow-sm,
  .shadow-md,
  .shadow-lg,
  .shadow-xl,
  .shadow-2xl {
    box-shadow: none;
    border: 1px solid var(--border-secondary);
  }
}