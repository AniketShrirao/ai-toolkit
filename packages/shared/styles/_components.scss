// Shared component styles for the AI Toolkit
@use 'variables' as *;
@use 'mixins' as *;

// Card component styles
@mixin card-base {
  background-color: var(--surface);
  border: 1px solid var(--border);
  border-radius: map-get($border-radius, lg);
  box-shadow: map-get($shadows, sm);
  transition: box-shadow map-get($transitions, base) map-get($easing, ease-in-out);
}

@mixin card-hover {
  &:hover {
    box-shadow: map-get($shadows, md);
  }
}

@mixin card-padding($size: md) {
  @if $size == sm {
    padding: space(4);
  } @else if $size == md {
    padding: space(6);
  } @else if $size == lg {
    padding: space(8);
  }
}

// Form input styles
@mixin input-base {
  width: 100%;
  padding: space(2.5) space(3);
  border: 1px solid var(--border);
  border-radius: map-get($border-radius, md);
  background-color: var(--surface);
  color: var(--text-primary);
  font-family: inherit;
  font-size: map-get($font-sizes, base);
  line-height: map-get($line-heights, normal);
  transition: all map-get($transitions, base) map-get($easing, ease-in-out);
  
  &::placeholder {
    color: var(--text-tertiary);
  }
  
  &:focus {
    outline: none;
    border-color: var(--border-focus);
    box-shadow: 0 0 0 3px rgba(var(--primary), 0.1);
  }
  
  &:disabled {
    background-color: var(--bg-secondary);
    color: var(--text-disabled);
    cursor: not-allowed;
  }
  
  &.error {
    border-color: var(--error);
    
    &:focus {
      border-color: var(--error);
      box-shadow: 0 0 0 3px rgba(var(--error), 0.1);
    }
  }
}

// Badge styles
@mixin badge-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: map-get($border-radius, full);
  font-weight: $font-weight-medium;
  white-space: nowrap;
}

@mixin badge-size($size: md) {
  @if $size == sm {
    padding: space(1) space(2);
    @include font-size(xs);
    min-height: space(5);
  } @else if $size == md {
    padding: space(1.5) space(2.5);
    @include font-size(sm);
    min-height: space(6);
  } @else if $size == lg {
    padding: space(2) space(3);
    @include font-size(base);
    min-height: space(8);
  }
}

@mixin badge-variant($variant: primary) {
  @if $variant == primary {
    background-color: var(--primary-light);
    color: var(--primary-dark);
  } @else if $variant == success {
    background-color: var(--success-bg);
    color: var(--success);
  } @else if $variant == warning {
    background-color: var(--warning-bg);
    color: var(--warning);
  } @else if $variant == error {
    background-color: var(--error-bg);
    color: var(--error);
  } @else if $variant == info {
    background-color: var(--info-bg);
    color: var(--info);
  } @else if $variant == neutral {
    background-color: var(--bg-tertiary);
    color: var(--text-secondary);
  }
}