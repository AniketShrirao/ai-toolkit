// Documentation Form Component Styles
// Extends AI Toolkit form styles with documentation-specific variants

// Documentation form components
.doc-form {
    .form-group {
        margin-bottom: doc-space(lg);

        &:last-child {
            margin-bottom: 0;
        }
    }

    .form-label {
        display: block;
        margin-bottom: doc-space(sm);
        @include text-style(sm, $font-weight-medium);
        color: var(--text-primary);

        .required {
            color: var(--error);
            margin-left: doc-space(xs);
        }
    }

    .form-input {
        @include doc-input;

        &.error {
            border-color: var(--error);

            &:focus {
                border-color: var(--error);
                box-shadow: 0 0 0 3px color-alpha(error, 500, 0.1);
            }
        }
    }

    .form-textarea {
        @include doc-input;
        min-height: 120px;
        resize: vertical;
        font-family: inherit;
    }

    .form-select {
        @include doc-input;
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3e%3c/svg%3e");
        background-position: right doc-space(md) center;
        background-repeat: no-repeat;
        background-size: 1rem 1rem;
        padding-right: doc-space(xl);
        appearance: none;
    }

    .form-help {
        margin-top: doc-space(sm);
        @include text-style(sm);
        color: var(--text-tertiary);
    }

    .form-error {
        margin-top: doc-space(sm);
        @include text-style(sm);
        color: var(--error);
        display: flex;
        align-items: center;
        gap: doc-space(sm);

        .error-icon {
            width: 1rem;
            height: 1rem;
            flex-shrink: 0;
        }
    }
}

// Search form component
.search-form {
    position: relative;

    .search-input {
        @include doc-search-input;
        width: 100%;

        &:focus {
            +.search-results {
                display: block;
            }
        }
    }

    .search-button {
        position: absolute;
        right: doc-space(sm);
        top: 50%;
        transform: translateY(-50%);
        @include doc-button(ghost);
        padding: doc-space(sm);
        min-height: auto;
        min-width: auto;
    }

    .search-results {
        position: absolute;
        top: 100%;
        left: 0;
        right: 0;
        background: var(--surface);
        border: 1px solid var(--border);
        border-radius: radius(md);
        box-shadow: shadow(lg);
        z-index: z-index(dropdown);
        max-height: 400px;
        overflow-y: auto;
        margin-top: doc-space(xs);
        display: none;

        .search-result {
            padding: doc-space(md);
            border-bottom: 1px solid var(--border);
            cursor: pointer;

            &:hover {
                background: var(--bg-secondary);
            }

            &:last-child {
                border-bottom: none;
            }

            .result-title {
                @include text-style(sm, $font-weight-medium);
                color: var(--text-primary);
                margin-bottom: doc-space(xs);
            }

            .result-excerpt {
                @include text-style(xs);
                color: var(--text-tertiary);
                @include line-clamp(2);
            }

            .result-path {
                @include text-style(xs);
                color: var(--text-tertiary);
                margin-top: doc-space(xs);
                font-family: $font-family-mono;
            }
        }

        .no-results {
            padding: doc-space(xl);
            text-align: center;
            color: var(--text-tertiary);
            @include text-style(sm);
        }
    }
}

// Checkbox and radio components
.form-checkbox,
.form-radio {
    display: flex;
    align-items: flex-start;
    gap: doc-space(md);
    cursor: pointer;

    .checkbox-input,
    .radio-input {
        width: 1.25rem;
        height: 1.25rem;
        border: 2px solid var(--border);
        background: var(--surface);
        cursor: pointer;
        flex-shrink: 0;
        margin-top: 2px; // Align with first line of text

        &:checked {
            background: var(--primary);
            border-color: var(--primary);
        }

        &:focus {
            outline: 2px solid var(--border-focus);
            outline-offset: 2px;
        }
    }

    .checkbox-input {
        border-radius: radius(sm);
    }

    .radio-input {
        border-radius: radius(full);
    }

    .checkbox-label,
    .radio-label {
        @include text-style(sm);
        color: var(--text-secondary);
        cursor: pointer;

        .label-title {
            color: var(--text-primary);
            font-weight: $font-weight-medium;
            margin-bottom: doc-space(xs);
        }

        .label-description {
            color: var(--text-tertiary);
        }
    }
}

// Toggle switch component
.form-toggle {
    display: flex;
    align-items: center;
    gap: doc-space(md);
    cursor: pointer;

    .toggle-input {
        position: relative;
        width: 3rem;
        height: 1.5rem;
        background: var(--border);
        border-radius: radius(full);
        cursor: pointer;
        transition: background-color transition(base);

        &::after {
            content: '';
            position: absolute;
            top: 2px;
            left: 2px;
            width: 1.25rem;
            height: 1.25rem;
            background: var(--surface);
            border-radius: radius(full);
            transition: transform transition(base);
            box-shadow: shadow(sm);
        }

        &:checked {
            background: var(--primary);

            &::after {
                transform: translateX(1.5rem);
            }
        }

        &:focus {
            outline: 2px solid var(--border-focus);
            outline-offset: 2px;
        }
    }

    .toggle-label {
        @include text-style(sm);
        color: var(--text-secondary);
        cursor: pointer;

        .label-title {
            color: var(--text-primary);
            font-weight: $font-weight-medium;
            margin-bottom: doc-space(xs);
        }
    }
}

// File upload component
.file-upload {
    .upload-area {
        border: 2px dashed var(--border);
        border-radius: radius(lg);
        padding: doc-space(2xl);
        text-align: center;
        cursor: pointer;
        transition: all transition(base);

        &:hover,
        &.dragover {
            border-color: var(--primary);
            background: var(--primary-light);
        }

        .upload-icon {
            width: 3rem;
            height: 3rem;
            margin: 0 auto doc-space(lg);
            color: var(--text-tertiary);
        }

        .upload-text {
            @include text-style(base, $font-weight-medium);
            color: var(--text-primary);
            margin-bottom: doc-space(sm);
        }

        .upload-hint {
            @include text-style(sm);
            color: var(--text-tertiary);
        }
    }

    .file-input {
        position: absolute;
        width: 1px;
        height: 1px;
        padding: 0;
        margin: -1px;
        overflow: hidden;
        clip: rect(0, 0, 0, 0);
        white-space: nowrap;
        border: 0;
    }

    .file-list {
        margin-top: doc-space(lg);

        .file-item {
            display: flex;
            align-items: center;
            gap: doc-space(md);
            padding: doc-space(md);
            background: var(--bg-secondary);
            border-radius: radius(md);
            margin-bottom: doc-space(sm);

            &:last-child {
                margin-bottom: 0;
            }

            .file-icon {
                width: 2rem;
                height: 2rem;
                color: var(--text-tertiary);
                flex-shrink: 0;
            }

            .file-info {
                flex: 1;

                .file-name {
                    @include text-style(sm, $font-weight-medium);
                    color: var(--text-primary);
                    margin-bottom: doc-space(xs);
                }

                .file-size {
                    @include text-style(xs);
                    color: var(--text-tertiary);
                }
            }

            .file-actions {
                display: flex;
                gap: doc-space(sm);

                .remove-button {
                    @include doc-button(ghost);
                    padding: doc-space(xs);
                    min-height: auto;
                    min-width: auto;
                    color: var(--error);

                    &:hover {
                        background: var(--error-light);
                    }
                }
            }
        }
    }
}

// Form validation styles
.form-group {
    &.has-error {
        .form-label {
            color: var(--error);
        }

        .form-input,
        .form-textarea,
        .form-select {
            border-color: var(--error);

            &:focus {
                border-color: var(--error);
                box-shadow: 0 0 0 3px color-alpha(error, 500, 0.1);
            }
        }
    }

    &.has-success {
        .form-label {
            color: var(--success);
        }

        .form-input,
        .form-textarea,
        .form-select {
            border-color: var(--success);

            &:focus {
                border-color: var(--success);
                box-shadow: 0 0 0 3px color-alpha(success, 500, 0.1);
            }
        }
    }
}